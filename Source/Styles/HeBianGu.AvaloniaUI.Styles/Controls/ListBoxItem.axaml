<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:Avalonia.Styles">
    <Design.PreviewWith>
        <Border Padding="0">
            <ListBox>
                <ListBoxItem IsEnabled="False">Disabled</ListBoxItem>
                <ListBoxItem Padding="20" Background="#66000000">
                    Test
                </ListBoxItem>
                <ListBoxItem>Test</ListBoxItem>
            </ListBox>
        </Border>
    </Design.PreviewWith>
    <Thickness x:Key="ListBoxItemPadding">12,9,12,12</Thickness>
    <ControlTheme x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:LayoutKeys.BorderThickness}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static h:LayoutKeys.CornerRadius}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:LayoutKeys.Padding}}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter Name="PART_ContentPresenter"
                                  Padding="{TemplateBinding Padding}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  CornerRadius="{TemplateBinding CornerRadius}" />
            </ControlTemplate>
        </Setter>

        <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>

        <!--  PointerOver State  -->
        <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
        </Style>

        <!--  Pressed State  -->
        <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
        </Style>

        <!--  Selected State  -->
        <Style Selector="^:selected">

            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Selected}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.CaptionForeground}}" />
            </Style>

            <!--  Selected Unfocused State  -->
            <Style Selector="^:not(:focus) /template/ ContentPresenter#PART_ContentPresenter">
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Selected}}" />-->
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />-->
                <!--<Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />-->
            </Style>

            <!--  Selected PointerOver State  -->
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </Style>

            <!--  Selected Pressed State  -->
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>
