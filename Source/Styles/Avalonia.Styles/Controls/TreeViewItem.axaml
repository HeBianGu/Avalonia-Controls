<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="using:Avalonia.Controls.Converters"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:Avalonia.Styles">
    <!--  Add Resources Here  -->

    <x:Double x:Key="TreeViewItemIndent">16</x:Double>
    <x:Double x:Key="TreeViewItemExpandCollapseChevronSize">12</x:Double>
    <Thickness x:Key="TreeViewItemExpandCollapseChevronMargin">12, 0, 12, 0</Thickness>
    <StreamGeometry x:Key="TreeViewItemCollapsedChevronPathData">M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z</StreamGeometry>
    <StreamGeometry x:Key="TreeViewItemExpandedChevronPathData">M0,1 L10,10 20,1 19,0 10,8 1,0 Z</StreamGeometry>
    <converters:MarginMultiplierConverter x:Key="TreeViewItemLeftMarginConverter"
                                          Indent="{StaticResource TreeViewItemIndent}"
                                          Left="True" />

    <ControlTheme x:Key="FluentTreeViewExpandCollapseChevron" TargetType="ToggleButton">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
        <Setter Property="Height" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="Transparent">
                    <Path x:Name="ChevronPath"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource TreeViewItemCollapsedChevronPathData}"
                          Fill="{DynamicResource TreeViewItemForeground}"
                          Stretch="Uniform" />
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:checked /template/ Path#ChevronPath">
            <Setter Property="Data" Value="{StaticResource TreeViewItemExpandedChevronPathData}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
        <!--<Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource TreeViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TreeViewItemBorderThemeThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeViewItemForeground}" />-->
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:LayoutKeys.BorderThickness}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static h:LayoutKeys.CornerRadius}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:LayoutKeys.Padding}}" />
        <!--<Setter Property="Height" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />-->

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel>
                    <Border Name="PART_LayoutRoot"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Classes="TreeViewItemLayoutRoot"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Focusable="True"
                            TemplatedControl.IsTemplateFocusTarget="True">
                        <Grid Name="PART_Header"
                              Margin="{TemplateBinding Level,
                                                       Mode=OneWay,
                                                       Converter={StaticResource TreeViewItemLeftMarginConverter}}"
                              ColumnDefinitions="Auto, *">
                            <Panel Name="PART_ExpandCollapseChevronContainer" Margin="{StaticResource TreeViewItemExpandCollapseChevronMargin}">
                                <ToggleButton Name="PART_ExpandCollapseChevron"
                                              Focusable="False"
                                              IsChecked="{TemplateBinding IsExpanded,
                                                                          Mode=TwoWay}"
                                              Theme="{StaticResource FluentTreeViewExpandCollapseChevron}" />
                            </Panel>
                            <ContentPresenter Name="PART_HeaderPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Background="Transparent"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              Focusable="False" />
                        </Grid>
                    </Border>
                    <ItemsPresenter Name="PART_ItemsPresenter"
                                    IsVisible="{TemplateBinding IsExpanded}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}" />
                </StackPanel>
            </ControlTemplate>
        </Setter>

        <!--  PointerOver state  -->
        <Style Selector="^ /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
            <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />-->
        </Style>
        <Style Selector="^ /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        </Style>

        <!--  Pressed state  -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />

        </Style>
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
        </Style>

        <!--  Disabled state  -->
        <Style Selector="^:disabled /template/ Border#PART_LayoutRoot">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>
        <Style Selector="^:disabled /template/ ContentPresenter#PART_HeaderPresenter">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>

        <!--  Selected state  -->
        <Style Selector="^:selected /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Selected}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
        </Style>
        <Style Selector="^:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        </Style>

        <!--  Selected PointerOver state  -->
        <Style Selector="^:selected /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
        </Style>
        <Style Selector="^:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        </Style>

        <!--  Selected Pressed state  -->
        <Style Selector="^:pressed:selected /template/ Border#PART_LayoutRoot:pointerover">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />

        </Style>
        <Style Selector="^:pressed:selected /template/ Border#PART_LayoutRoot:pointerover > ContentPresenter#PART_HeaderPresenter">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
        </Style>

        <!--  Disabled Selected state  -->
        <Style Selector="^:disabled:selected /template/ Border#PART_LayoutRoot">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>
        <Style Selector="^:disabled:selected /template/ Border#PART_LayoutRoot > ContentPresenter#PART_HeaderPresenter">
          <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>

        <Style Selector="^:empty /template/ ToggleButton#PART_ExpandCollapseChevron">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="^:empty /template/ Panel#PART_ExpandCollapseChevronContainer">
            <Setter Property="Width" Value="{StaticResource TreeViewItemExpandCollapseChevronSize}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>
