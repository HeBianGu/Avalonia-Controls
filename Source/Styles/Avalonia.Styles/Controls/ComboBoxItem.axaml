<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:Avalonia.Styles">
    <!--  Add Resources Here  -->

    <ControlTheme x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <!--<Setter Property="Foreground" Value="{DynamicResource ComboBoxItemForeground}" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:LayoutKeys.BorderThickness}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static h:LayoutKeys.CornerRadius}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:LayoutKeys.Padding}}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter Name="PART_ContentPresenter"
                                  Padding="{TemplateBinding Padding}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  Foreground="{TemplateBinding Foreground}" />
            </ControlTemplate>
        </Setter>

        <!--  PointerOver state  -->
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
        </Style>

        <!--  Disabled state  -->
        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
        </Style>

        <!--  Pressed state  -->
        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
        </Style>

        <!--  Selected state  -->
        <Style Selector="^:selected">
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.Selected}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </Style>
            <!--  Selected Disabled state  -->
            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
            </Style>
            <!--  Selected PointerOver state  -->
            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrushTitle}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </Style>
            <!--  Selected Pressed state  -->
            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>
