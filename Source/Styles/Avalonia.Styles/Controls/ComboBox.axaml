<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:Avalonia.Styles">
    <!--  Add Resources Here  -->
    <Thickness x:Key="ComboBoxTopHeaderMargin">0,0,0,4</Thickness>
    <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItems">15</x:Int32>
    <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItemsThatCanBeShownOnOneSide">7</x:Int32>

    <Thickness x:Key="ComboBoxPadding">12,5,0,7</Thickness>
    <Thickness x:Key="ComboBoxEditableTextPadding">11,5,32,6</Thickness>
    <x:Double x:Key="ComboBoxMinHeight">32</x:Double>

    <ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <!--<Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />-->
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="MaxDropDownHeight" Value="800" />
        <!--<Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />-->
        <!--<Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />-->
        <!--<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />-->
        <!--<Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />-->
        <!--<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />-->

        <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.CaptionBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.CaptionForeground}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static h:LayoutKeys.BorderThickness}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static h:LayoutKeys.CornerRadius}}" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static h:LayoutKeys.Padding}}" />
        <Setter Property="Height" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static h:LayoutKeys.ItemHeight}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="PlaceholderForeground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid ColumnDefinitions="*,32">
                        <Border x:Name="Background"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                MinWidth="{DynamicResource ComboBoxThemeMinWidth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border x:Name="HighlightBackground"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource ComboBoxBackgroundUnfocused}"
                                BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsVisible="False" />
                        <TextBlock x:Name="PlaceholderTextBlock"
                                   Grid.Column="0"
                                   Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Foreground="{TemplateBinding PlaceholderForeground}"
                                   IsVisible="{TemplateBinding SelectionBoxItem,
                                                               Converter={x:Static ObjectConverters.IsNull}}"
                                   Text="{TemplateBinding PlaceholderText}" />
                        <ContentControl x:Name="ContentPresenter"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding SelectionBoxItem}" />
                        <!--  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"  -->

                        <Border x:Name="DropDownOverlay"
                                Grid.Column="1"
                                Width="30"
                                Margin="0,1,1,1"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                IsVisible="False" />

                        <PathIcon x:Name="DropDownGlyph"
                                  Grid.Column="1"
                                  Width="12"
                                  Height="12"
                                  Margin="0,0,10,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Data="M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsHitTestVisible="False"
                                  UseLayoutRounding="False" />

                        <Popup Name="PART_Popup"
                               MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                               InheritsTransform="True"
                               IsLightDismissEnabled="True"
                               IsOpen="{TemplateBinding IsDropDownOpen,
                                                        Mode=TwoWay}"
                               PlacementTarget="Background"
                               WindowManagerAddShadowHint="False">
                            <Border x:Name="PopupBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource {x:Static h:BrushKeys.Background}}"
                                    BorderBrush="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}"
                                    BorderThickness="{DynamicResource {x:Static h:LayoutKeys.BorderThickness}}"
                                    CornerRadius="{DynamicResource {x:Static h:LayoutKeys.CornerRadius}}">
                                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <!--  IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"  -->
                                    <ItemsPresenter Name="PART_ItemsPresenter"
                                                    Margin="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!--  PointerOver State  -->
        <Style Selector="^:pointerover /template/ Border#Background">
            <Setter Property="Background" Value="{DynamicResource {x:Static h:BrushKeys.MouseOver}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.BorderBrush}}" />
        </Style>

        <!--  Pressed State  -->
        <Style Selector="^:pressed /template/ Border#Background">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Pressed}}" />
        </Style>

        <!--  Error State  -->
        <Style Selector="^:error /template/ Border#Background">
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.Red}}" />
        </Style>

        <!--  Focus Pressed State  -->
        <Style Selector="^:focused:pressed">
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </Style>
        </Style>

        <!--  Focused State  -->
        <Style Selector="^:focus-visible">
            <Style Selector="^ /template/ Border#HighlightBackground">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundAssist}}" />
            </Style>
            <Style Selector="^ /template/ ContentControl#ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.ForegroundTitle}}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </Style>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static h:BrushKeys.Foreground}}" />
            </Style>
        </Style>

        <!--  Disabled State  -->
        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="{DynamicResource {x:Static h:LayoutKeys.Disabled}}" />
            <!--<Style Selector="^ /template/ Border#Background">
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
      </Style>
      <Style Selector="^ /template/ ContentControl#ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
      </Style>
      <Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
      </Style>
      <Style Selector="^ /template/ PathIcon#DropDownGlyph">
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
      </Style>-->
        </Style>
    </ControlTheme>

</ResourceDictionary>
