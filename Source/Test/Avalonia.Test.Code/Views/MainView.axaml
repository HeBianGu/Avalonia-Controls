<UserControl x:Class="Avalonia.Test.Code.Views.MainView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:h="https://github.com/HeBianGu"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:vm="clr-namespace:Avalonia.Test.Code.ViewModels"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="vm:MainViewModel"
             mc:Ignorable="d">
  <Design.DataContext>
    <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
    <vm:MainViewModel />
  </Design.DataContext>

  <TabControl>
    <TabItem Header="Selector - Border#clipChild">
      <Grid ColumnDefinitions="Auto" RowDefinitions="Auto,Auto">
        <Grid.Styles>
          <Styles>
            <Style Selector="Border#b_1:pointerover">
              <Setter Property="Background" Value="Red"/>
            </Style>
            <Style Selector="Border#b_2">
              <Setter Property="Background" Value="Orange"/>
            </Style>
          </Styles>
        </Grid.Styles>
        <UniformGrid>
          <Border Name="b_1" Background="Yellow"
                  Width="100"
                  Height="100"/>
          <Border Name="b_2" Width="100"
                  Height="100">
          </Border>
        </UniformGrid>
      </Grid>
    </TabItem>
    <TabItem Header="Selector - Border#clipChild">
      <Grid ColumnDefinitions="Auto" RowDefinitions="Auto,Auto">
        <Grid.Styles>
          <Styles>
            <Style Selector="Border#clipped:pointerover">
              <Setter Property="Border.Background" Value="Crimson"/>
            </Style>
            <Style Selector="Border#clipChild">
              <Style.Animations>
                <Animation Duration="0:0:2" IterationCount="Infinite">
                  <KeyFrame Cue="100%">
                    <Setter Property="RotateTransform.Angle" Value="360"/>
                  </KeyFrame>
                </Animation>
              </Style.Animations>
            </Style>
          </Styles>
        </Grid.Styles>
        <Border Name="clipped"
                Background="Yellow"
                Width="100"
                Height="100"
                Classes.clip="{Binding #useMask.IsChecked}">
          <Border.Styles>
            <Style Selector="Border.clip">
              <Setter Property="Clip"
                      Value="M 58.625 0.07421875
                         C 50.305778 0.26687364 42.411858 7.0346526 41.806641 15.595703
                         C 42.446442 22.063923 39.707425 13.710754 36.982422 12.683594
                         C 29.348395 6.1821635 16.419398 8.4359222 11.480469 17.195312
                         C 6.0935256 25.476803 9.8118851 37.71125 18.8125 41.6875
                         C 9.1554771 40.62945 -0.070876925 49.146842 0.21679688 58.857422 
                         C 0.21545578 60.872512 0.56758794 62.88911 1.2617188 64.78125 
                         C 4.3821886 74.16708 16.298268 78.921772 25.03125 74.326172 
                         C 28.266843 72.062552 26.298191 74.214838 25.414062 76.398438
                         C 21.407348 85.589198 27.295992 97.294293 37.097656 99.501953 
                         C 46.864883 102.3541 57.82177 94.726518 58.539062 84.580078 
                         C 58.142158 79.498998 59.307538 83.392694 61.207031 85.433594 
                         C 67.532324 93.056874 80.440232 93.192029 86.882812 85.630859 
                         C 93.836392 78.456939 92.396838 65.538666 84.115234 60.009766 
                         C 79.783641 57.904836 83.569793 58.802369 86.375 58.193359 
                         C 96.383335 56.457569 102.87506 44.824101 99.083984 35.394531 
                         C 95.963498 26.008711 84.047451 21.254079 75.314453 25.849609
                         C 72.078834 28.113269 74.047517 25.960974 74.931641 23.777344 
                         C 78.93827 14.586564 73.049722 2.8815081 63.248047 0.67382812
                         C 61.721916 0.22817968 60.165597 0.038541919 58.625 0.07421875 z " />
            </Style>
          </Border.Styles>
          <Border Name="clipChild" Background="Red" Margin="4">
            <!-- Setting opacity puts the TextBox on a new layer -->
            <TextBox Text="Avalonia" Opacity="0.9" VerticalAlignment="Center"/>
            <Border.RenderTransform>
              <RotateTransform/>
            </Border.RenderTransform>
          </Border>
        </Border>
        <CheckBox Name="useMask" IsChecked="True" Grid.Row="1">Apply Geometry Clip</CheckBox>
      </Grid>
    </TabItem>
    <TabItem Header="Transitions">
      <TabItem.Styles>
        <Styles>
          <Styles.Resources>
            <Template x:Key="Acorn">
              <Path Fill="White" Stretch="Uniform"
                    Data="F1 M 16.6309,18.6563C 17.1309,
                8.15625 29.8809,14.1563 29.8809,
                14.1563C 30.8809,11.1563 34.1308,
                11.4063 34.1308,11.4063C 33.5,12 
                34.6309,13.1563 34.6309,13.1563C 
                32.1309,13.1562 31.1309,14.9062 
                31.1309,14.9062C 41.1309,23.9062
                32.6309,27.9063 32.6309,27.9062C 
                24.6309,24.9063 21.1309,22.1562 
                16.6309,18.6563 Z M 16.6309,19.9063C
                21.6309,24.1563 25.1309,26.1562 
                31.6309,28.6562C 31.6309,28.6562
                26.3809,39.1562 18.3809,36.1563C
                18.3809,36.1563 18,38 16.3809,36.9063C 
                15,36 16.3809,34.9063 16.3809,34.9063C
                16.3809,34.9063 10.1309,30.9062 16.6309,19.9063 Z"/>
            </Template>
            <Template x:Key="Heart">
              <Path Fill="Red" Stretch="Uniform" Data="
          M 272.70141,238.71731 
          C 206.46141,238.71731 152.70146,292.4773 152.70146,358.71731 
          C 152.70146,493.47282 288.63461,528.80461 381.26391,662.02535 
          C 468.83815,529.62199 609.82641,489.17075 609.82641,358.71731 
          C 609.82641,292.47731 556.06651,238.7173 489.82641,238.71731 
          C 441.77851,238.71731 400.42481,267.08774 381.26391,307.90481 
          C 362.10311,267.08773 320.74941,238.7173 272.70141,238.71731 z "/>
            </Template>
          </Styles.Resources>

          <Style Selector="Border.Test">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Child" Value="{StaticResource Acorn}"/>
            <Setter Property="Transitions">
              <Transitions>
                <TransformOperationsTransition Property="RenderTransform"  Duration="0:0:1" />
              </Transitions>
            </Setter>
            <Setter Property="RenderTransform" Value="none" />
          </Style>

          <Style Selector="Border.Rect1:pointerover">
            <Setter Property="RenderTransform" Value="rotate(120deg) scale(1.5)" />
          </Style>

          <Style Selector="Border.Rect2:pointerover">
            <Setter Property="RenderTransform" Value="scale(0.8)" />
          </Style>

          <Style Selector="Border.Rect3">
            <Setter Property="Child" Value="{StaticResource Heart}"/>
          </Style>

          <Style Selector="Border.Rect3:pointerover">
            <Setter Property="RenderTransform" Value="rotate(1turn)" />
          </Style>

          <Style Selector="Border.Rect4:pointerover">
            <Setter Property="RenderTransform" Value="translateY(-100px)" />
          </Style>

          <Style Selector="Border.Rect5:pointerover">
            <Setter Property="RenderTransform" Value="skewX(-20deg)" />
          </Style>

          <Style Selector="Border.Rect5:pointerover">
            <Setter Property="RenderTransform" Value="skewX(-20deg)" />
          </Style>

          <Style Selector="Border.Rect6">
            <Setter Property="Transitions">
              <Transitions>
                <TransformOperationsTransition Property="RenderTransform"  Duration="0:0:0.5" Delay="0:0:1"/>
              </Transitions>
            </Setter>
            <Setter Property="RenderTransform" Value="scale(0.8)" />
          </Style>

          <Style Selector="Border.Rect6:pointerover">
            <Setter Property="RenderTransform" Value="none" />
          </Style>

          <Style Selector="Border.Rect7">
            <Setter Property="Transitions">
              <Transitions>
                <DoubleTransition Property="Height" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
          </Style>

          <Style Selector="Border.Rect7:pointerover">
            <Setter Property="Height" Value="50" />
          </Style>

          <Style Selector="Border.Rect8">
            <Setter Property="Transitions">
              <Transitions>
                <CornerRadiusTransition Property="CornerRadius" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
          </Style>

          <Style Selector="Border.Rect8:pointerover">
            <Setter Property="CornerRadius" Value="50" />
          </Style>

          <Style Selector="Border.Rect9">
            <Setter Property="Transitions">
              <Transitions>
                <ThicknessTransition Property="Padding" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
          </Style>

          <Style Selector="Border.Rect9:pointerover">
            <Setter Property="Padding" Value="10" />
          </Style>

          <Style Selector="Border.Shadow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BoxShadow" Value="inset 0 0 0 2 Red, -15 -15 Green"/>
            <Setter Property="Transitions">
              <Transitions>
                <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
          </Style>
          <Style Selector="Border.Shadow:pointerover">
            <Setter Property="BoxShadow" Value="inset 30 30 20 30 Green, 20 40 20 10 Red"/>
          </Style>

          <Style Selector="Border.Rect10">
            <Setter Property="Transitions">
              <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
            <Setter Property="Background" Value="Red" />
          </Style>

          <Style Selector="Border.Rect10:pointerover">
            <Setter Property="Background" Value="Orange" />
          </Style>

          <Style Selector="Border.Rect11">
            <Setter Property="Transitions">
              <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
            <Setter Property="Background" Value="Red" />
          </Style>

          <Style Selector="Border.Rect11:pointerover">
            <Setter Property="Background" >
              <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                <GradientStop Offset="0" Color="Red"/>
                <GradientStop Offset="1" Color="Blue"/>
              </LinearGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect12">
            <Setter Property="Transitions">
              <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
            <Setter Property="Background" >
              <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                <GradientStop Offset="0" Color="Red"/>
                <GradientStop Offset="1" Color="Blue"/>
              </LinearGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect12:pointerover">
            <Setter Property="Background" >
              <LinearGradientBrush StartPoint="100%,0%" EndPoint="0%,100%">
                <GradientStop Offset="0" Color="Green"/>
                <GradientStop Offset="1" Color="Yellow"/>
              </LinearGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect13">
            <Setter Property="Transitions">
              <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
            <Setter Property="Background" >
              <ConicGradientBrush Center="50%,50%" Angle="0">
                <GradientStop Offset="0" Color="Red"/>
                <GradientStop Offset="1" Color="Blue"/>
              </ConicGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect13:pointerover">
            <Setter Property="Background" >
              <ConicGradientBrush Center="70%,70%" Angle="90">
                <GradientStop Offset="0" Color="Green"/>
                <GradientStop Offset="1" Color="Yellow"/>
              </ConicGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect14">
            <Setter Property="Transitions">
              <Transitions>
                <BrushTransition Property="Background" Duration="0:0:0.5" />
              </Transitions>
            </Setter>
            <Setter Property="Background" >
              <RadialGradientBrush Center="50%,50%">
                <GradientStop Offset="0" Color="Red"/>
                <GradientStop Offset="1" Color="Blue"/>
              </RadialGradientBrush>
            </Setter>
          </Style>

          <Style Selector="Border.Rect14:pointerover">
            <Setter Property="Background" >
              <RadialGradientBrush Center="30%,30%">
                <GradientStop Offset="0" Color="Green"/>
                <GradientStop Offset="1" Color="Yellow"/>
              </RadialGradientBrush>
            </Setter>
          </Style>
        </Styles>
      </TabItem.Styles>

      <Grid>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="False">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="20">
            <TextBlock VerticalAlignment="Center">Hover to activate Transitions.</TextBlock>
          </StackPanel>
          <WrapPanel ClipToBounds="False">
            <Border Classes="Test Rect1" Background="DarkRed"/>
            <Border Classes="Test Rect2" Background="Magenta"/>
            <Border Classes="Test Rect3"/>
            <Border Classes="Test Rect4" Background="Navy"/>
            <Border Classes="Test Rect5" Background="SeaGreen"/>
            <Border Classes="Test Rect6" Background="Orange"/>
            <Border Classes="Test Rect7" Background="Gold"/>
            <Border Classes="Test Rect8" Background="Gray" />
            <Border Classes="Test Rect9" Background="Red" />

            <Border Classes="Test Shadow" CornerRadius="10" Child="{x:Null}" />
            <Border Classes="Test Shadow" CornerRadius="0 30 60 0" Child="{x:Null}" />

            <Border Classes="Test Rect10" />
            <Border Classes="Test Rect11" />

            <Border Classes="Test Rect12" Child="{x:Null}"/>
            <Border Classes="Test Rect13" Child="{x:Null}"/>
            <Border Classes="Test Rect14" Child="{x:Null}"/>

            <Border Classes="Test Rect14" />
            <Border Classes="Test Rect14" />
            <Border Classes="Test Rect14" />
            <Border Classes="Test Rect14" />
          </WrapPanel>
        </StackPanel>
      </Grid>
    </TabItem>
    <TabItem Header="Animation">
      <TabItem.Styles>
        <Styles>
          <Styles.Resources>
            <Template x:Key="Acorn">
              <Path Fill="White" Stretch="Uniform"
                    Data="F1 M 16.6309,18.6563C 17.1309,
                8.15625 29.8809,14.1563 29.8809,
                14.1563C 30.8809,11.1563 34.1308,
                11.4063 34.1308,11.4063C 33.5,12 
                34.6309,13.1563 34.6309,13.1563C 
                32.1309,13.1562 31.1309,14.9062 
                31.1309,14.9062C 41.1309,23.9062
                32.6309,27.9063 32.6309,27.9062C 
                24.6309,24.9063 21.1309,22.1562 
                16.6309,18.6563 Z M 16.6309,19.9063C
                21.6309,24.1563 25.1309,26.1562 
                31.6309,28.6562C 31.6309,28.6562
                26.3809,39.1562 18.3809,36.1563C
                18.3809,36.1563 18,38 16.3809,36.9063C 
                15,36 16.3809,34.9063 16.3809,34.9063C
                16.3809,34.9063 10.1309,30.9062 16.6309,19.9063 Z"/>
            </Template>
            <Template x:Key="Heart">
              <Path Fill="Red" Stretch="Uniform" Data="
          M 272.70141,238.71731 
          C 206.46141,238.71731 152.70146,292.4773 152.70146,358.71731 
          C 152.70146,493.47282 288.63461,528.80461 381.26391,662.02535 
          C 468.83815,529.62199 609.82641,489.17075 609.82641,358.71731 
          C 609.82641,292.47731 556.06651,238.7173 489.82641,238.71731 
          C 441.77851,238.71731 400.42481,267.08774 381.26391,307.90481 
          C 362.10311,267.08773 320.74941,238.7173 272.70141,238.71731 z "/>
            </Template>
          </Styles.Resources>
          <Style Selector="Border.Test">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Child" Value="{StaticResource Acorn}"/>
          </Style>
          <Style Selector="Border.Rect1:pointerover">
            <Style.Animations>
              <Animation Duration="0:0:2.5"
                         IterationCount="4"
                         FillMode="None"
                         PlaybackDirection="AlternateReverse"
                         Easing="SineEaseInOut">
                <KeyFrame Cue="20%">
                  <Setter Property="RotateTransform.Angle" Value="45"/>
                </KeyFrame>
                <KeyFrame Cue="50%">
                  <Setter Property="ScaleTransform.ScaleX" Value="1.5"/>
                </KeyFrame>
                <KeyFrame Cue="80%">
                  <Setter Property="RotateTransform.Angle" Value="120"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Rect2:pointerover">
            <Style.Animations>
              <Animation Duration="0:0:0.5" Easing="SineEaseInOut">
                <KeyFrame Cue="50%">
                  <Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
                  <Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Rect3">
            <Style.Animations>
              <Animation Duration="0:0:0.5"
                         Easing="QuadraticEaseInOut"
                         IterationCount="Infinite">
                <KeyFrame Cue="50%">
                  <Setter Property="ScaleTransform.ScaleX" Value="0.8"/>
                  <Setter Property="ScaleTransform.ScaleY" Value="0.8"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
            <Setter Property="Child" Value="{StaticResource Heart}"/>
          </Style>
          <Style Selector="Border.Rect4:pointerover">
            <Style.Animations>
              <Animation Duration="0:0:3" Easing="BounceEaseInOut">
                <KeyFrame Cue="48%">
                  <Setter Property="TranslateTransform.Y" Value="-100"/>
                  <Setter Property="Background" Value="Magenta"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Rect5:pointerover">
            <Style.Animations>
              <Animation Duration="0:0:3" Easing="CircularEaseInOut">
                <KeyFrame Cue="25%">
                  <Setter Property="SkewTransform.AngleX" Value="-20"/>
                </KeyFrame>
                <KeyFrame Cue="75%">
                  <Setter Property="SkewTransform.AngleX" Value="20"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Rect6">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Background" Value="Red"/>
                </KeyFrame>
                <KeyFrame Cue="15%">
                  <Setter Property="Background" Value="Yellow"/>
                </KeyFrame>
                <KeyFrame Cue="30%">
                  <Setter Property="Background" Value="Green"/>
                </KeyFrame>
                <KeyFrame Cue="45%">
                  <Setter Property="Background" Value="Cyan"/>
                </KeyFrame>
                <KeyFrame Cue="60%">
                  <Setter Property="Background" Value="Blue"/>
                </KeyFrame>
                <KeyFrame Cue="75%">
                  <Setter Property="Background" Value="Indigo"/>
                </KeyFrame>
                <KeyFrame Cue="90%">
                  <Setter Property="Background" Value="Violet"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Shadow">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="BoxShadow" Value="inset 0 0 0 2 Red, -15 -15 Green"/>
                </KeyFrame>
                <KeyFrame Cue="35%">
                  <Setter Property="BoxShadow" Value="inset 0 0 20 2 Blue, -15 20 0 0 Blue"/>
                </KeyFrame>
                <KeyFrame Cue="70%">
                  <Setter Property="BoxShadow" Value="inset 0 0 20 30 Green, 20 20 20 0 Red"/>
                </KeyFrame>
                <KeyFrame Cue="85%">
                  <Setter Property="BoxShadow" Value="inset 30 0 20 30 Green, 20 20 20 10 Red"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="BoxShadow" Value="inset 30 30 20 30 Green, 20 40 20 10 Red"/>
                </KeyFrame>

              </Animation>
            </Style.Animations>
          </Style>

          <Style Selector="Border.Rect7">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Background" Value="Red" />
                </KeyFrame>
                <KeyFrame Cue="30%">
                  <Setter Property="Background">
                    <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </LinearGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="60%">
                  <Setter Property="Background" Value="Blue" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Background">
                    <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
                      <GradientStop Offset="0" Color="Green"/>
                      <GradientStop Offset="1" Color="Yellow"/>
                    </LinearGradientBrush>
                  </Setter>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>

          <Style Selector="Border.Rect8">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Background">
                    <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </LinearGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="50%">
                  <Setter Property="Background">
                    <LinearGradientBrush StartPoint="100%,0%" EndPoint="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="0.25" Color="Blue"/>
                      <GradientStop Offset="0.5" Color="Blue"/>
                      <GradientStop Offset="0.75" Color="Green"/>
                      <GradientStop Offset="1" Color="Yellow"/>
                    </LinearGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Background">
                    <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </LinearGradientBrush>
                  </Setter>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>

          <Style Selector="Border.Rect9">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Background">
                    <ConicGradientBrush Center="50%,50%" Angle="0">
                      <GradientStop Offset="0" Color="Blue"/>
                      <GradientStop Offset="0.5" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </ConicGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Background">
                    <ConicGradientBrush Center="50%,70%" Angle="90">
                      <GradientStop Offset="0" Color="Green"/>
                      <GradientStop Offset="0.25" Color="Yellow"/>
                      <GradientStop Offset="0.5" Color="Red"/>
                      <GradientStop Offset="0.75" Color="Blue"/>
                      <GradientStop Offset="1" Color="Green"/>
                    </ConicGradientBrush>
                  </Setter>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>

          <Style Selector="Border.Rect10">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Normal">
                <KeyFrame Cue="0%">
                  <Setter Property="Background">
                    <RadialGradientBrush Center="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </RadialGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="25%">
                  <Setter Property="Background">
                    <RadialGradientBrush Center="0%,0%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </RadialGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="50%">
                  <Setter Property="Background">
                    <RadialGradientBrush Center="100%,0%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </RadialGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="75%">
                  <Setter Property="Background">
                    <RadialGradientBrush Center="100%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </RadialGradientBrush>
                  </Setter>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Background">
                    <RadialGradientBrush Center="0%,100%">
                      <GradientStop Offset="0" Color="Red"/>
                      <GradientStop Offset="1" Color="Blue"/>
                    </RadialGradientBrush>
                  </Setter>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
          <Style Selector="Border.Blur">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Effect" Value="blur(0)"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Effect" Value="blur(10)"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
            <Setter Property="Child" Value="{StaticResource Acorn}"/>
          </Style>
          <Style Selector="Border.DropShadow">
            <Style.Animations>
              <Animation Duration="0:0:3"
                         IterationCount="Infinite"
                         PlaybackDirection="Alternate">
                <KeyFrame Cue="0%">
                  <Setter Property="Effect" Value="drop-shadow(0 0 0)"/>
                </KeyFrame>
                <KeyFrame Cue="35%">
                  <Setter Property="Effect" Value="drop-shadow(5 5 0 Green)"/>
                </KeyFrame>
                <KeyFrame Cue="70%">
                  <Setter Property="Effect" Value="drop-shadow(5 5 5 Red)"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                  <Setter Property="Effect" Value="drop-shadow(20 -5 5 Blue)"/>
                </KeyFrame>
              </Animation>
            </Style.Animations>
          </Style>
        </Styles>
      </TabItem.Styles>
      <Grid>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="False">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="20">
            <TextBlock VerticalAlignment="Center">Hover to activate Keyframe Animations.</TextBlock>
          </StackPanel>
          <WrapPanel ClipToBounds="False">
            <Border Classes="Test Rect1" Background="DarkRed"/>
            <Border Classes="Test Rect2" Background="Magenta"/>
            <Border Classes="Test Rect3"/>
            <Border Classes="Test Rect4" Background="Navy"/>
            <Border Classes="Test Rect5" Background="SeaGreen"/>
            <Border Classes="Test Rect6" Background="Red"/>
            <Border Classes="Test Shadow" CornerRadius="10" Child="{x:Null}" />
            <Border Classes="Test Shadow" CornerRadius="0 30 60 0" Child="{x:Null}" />
            <Border Classes="Test Rect7" Child="{x:Null}" />
            <Border Classes="Test Rect8" Child="{x:Null}" />
            <Border Classes="Test Rect9" Child="{x:Null}" />
            <Border Classes="Test Rect10" Child="{x:Null}" />
            <Border Classes="Test Blur" Background="#ffa0a0a0" BorderThickness="4" BorderBrush="Yellow" Padding="10"/>
            <Border Classes="Test DropShadow" Background="Transparent" BorderThickness="4" BorderBrush="Yellow">
              <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                Drop
                Shadow
              </TextBlock>
            </Border>
          </WrapPanel>
        </StackPanel>
      </Grid>
    </TabItem>
    <TabItem Header="RenderTransform">
      <TextBlock Padding="10,0"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 FontWeight="Bold"
                 Foreground="White"
                 Text="Rect14 (RightOf Rect9, AlignVerticalCenterWith Rect9)">
        <TextBlock.RenderTransform>
          <TransformGroup>
            <RotateTransform Angle="-90" />
          </TransformGroup>
        </TextBlock.RenderTransform>
      </TextBlock>
    </TabItem>
    <TabItem Header="Binding">
      <TabControl>
        <TabItem Header="ElementName">
          <StackPanel>
            <TextBox Name="tb_binding" />
            <TextBlock Text="{Binding #tb_binding.Text}" />
          </StackPanel>
        </TabItem>
        <TabItem Header="$parent">
          <Border Tag="Hello World!">
            <TextBlock Text="{Binding $parent.Tag}" />
          </Border>
        </TabItem>
        <TabItem Header="$parent[1]">
          <Border Tag="Hello World!">
            <Border>
              <TextBlock Text="{Binding $parent[1].Tag}" />
            </Border>
          </Border>
        </TabItem>
        <TabItem Header="$parent[Border]">
          <Border Tag="Hello World!">
            <Decorator>
              <TextBlock Text="{Binding $parent[Border].Tag}" />
            </Decorator>
          </Border>
        </TabItem>
        <TabItem Header="$parent[Border;1]">
          <Border Tag="Hello World!">
            <Border>
              <Decorator>
                <TextBlock Text="{Binding $parent[Border;1].Tag}" />
              </Decorator>
            </Border>
          </Border>
        </TabItem>
      </TabControl>
    </TabItem>

    <TabItem Header="Selector">
      <TabControl>
        <TabItem Header="Binding - Enum -ElementName">
          <DockPanel>
            <ComboBox Name="cb_sbee" DockPanel.Dock="Top">
              <HorizontalAlignment>Center</HorizontalAlignment>
              <HorizontalAlignment>Left</HorizontalAlignment>
              <HorizontalAlignment>Right</HorizontalAlignment>
            </ComboBox>
            <Grid Tag="{Binding #cb_sbee.SelectedItem}}">
              <Grid.Styles>

                <!--StackPanel > Button.xl  选择所有带有 xl 样式类的 Button（类）控件，同时它们是 StackPanel（类）控件的直接后代。-->
                <!--StackPanel  Button.xl  选择所有带有 xl 样式类的 Button（类）控件，同时它们是 StackPanel（类）控件的后代，可以位于任何级别。-->
                <!--<Style Selector="Grid#gd_1[Tag=Center]">
                  <Setter Property="IsVisible" Value="False"/>
                </Style>
                <Style Selector="Grid[Tag=Left]#gd_2">
                  <Setter Property="IsVisible" Value="False"/>
                </Style>-->

                <!--找到直接子项为Button的-->
                <!--
                <Style Selector="Grid[Tag=Right]>Button">
                  <Setter Property="IsVisible" Value="False"/>
                </Style>

                -->
                <!--找到子项为Button的-->
                <!--
                <Style Selector="Grid[Tag=Right] Button">
                  <Setter Property="IsVisible" Value="False"/>
                </Style>-->

                <!--找到子项为Button的，并且Name=gd1的-->
                <Style Selector="Grid[Tag=Right] Button#gd_1">
                  <Setter Property="IsVisible" Value="False"/>
                </Style>
              </Grid.Styles>
              <Grid>
                <Button Name="gd_1" Background="Orange" HorizontalAlignment="Left" Height="50" Width="50"/>
                <Button Name="gd_2" Background="Green" HorizontalAlignment="Center" Height="50" Width="50"/>
                <Button Name="gd_3" Background="Red" HorizontalAlignment="Right" Height="50" Width="50"/>
              </Grid>
            </Grid>
          </DockPanel>
        </TabItem>

        <TabItem Header="Binding - Enum">
          <DockPanel>
            <ComboBox Name="cb_sbe" DockPanel.Dock="Top">
              <HorizontalAlignment>Center</HorizontalAlignment>
              <HorizontalAlignment>Left</HorizontalAlignment>
              <HorizontalAlignment>Right</HorizontalAlignment>
            </ComboBox>
            <Grid Name="gd_be" Tag="{Binding #cb_sbe.SelectedItem}}">
              <Grid.Styles>
                <Style Selector="Grid[Tag=Center]">
                  <Setter Property="Background" Value="Red"/>
                </Style>
                <Style Selector="Grid[Tag=Left]">
                  <Setter Property="Background" Value="Orange"/>
                </Style>
                <Style Selector="Grid[Tag=Right]">
                  <Setter Property="Background" Value="Green"/>
                </Style>
              </Grid.Styles>
              <TextBlock Text="{Binding #cb_sbe.SelectedItem}" HorizontalAlignment="{Binding #cb_sbe.SelectedItem}"/>
              <TextBlock Text="{Binding #gd_be.Tag}" VerticalAlignment="Center" HorizontalAlignment="{Binding #gd_be.Tag}"/>
            </Grid>
          </DockPanel>
        </TabItem>

        <TabItem Header="Binding">
          <DockPanel>
            <ComboBox Name="cb_sb" DockPanel.Dock="Top">
              <system:Int32>1</system:Int32>
              <system:Int32>2</system:Int32>
              <system:Int32>3</system:Int32>

            </ComboBox>
            <Grid Tag="{Binding #cb_sb.SelectedIndex}">
              <Grid.Styles>
                <Style Selector="Grid[Tag=0]">
                  <Setter Property="Background" Value="Red"/>
                </Style>
                <Style Selector="Grid[Tag=1]">
                  <Setter Property="Background" Value="Orange"/>
                </Style>
                <Style Selector="Grid[Tag=2]">
                  <Setter Property="Background" Value="Green"/>
                </Style>
              </Grid.Styles>
            </Grid>
          </DockPanel>
        </TabItem>
        <TabItem Header="Classes Selector">
          <UniformGrid>
            <UniformGrid.Styles>
              <Style Selector="ToggleButton">
                <Setter Property="Content" Value="Default" />
              </Style>
              <Style Selector="ToggleButton.red">
                <Setter Property="Content" Value="ToggleButton.red" />
              </Style>
              <Style Selector="ToggleButton.accent">
                <Setter Property="Content" Value="ToggleButton.accent" />
              </Style>
            </UniformGrid.Styles>
            <ToggleButton />
            <ToggleButton Classes="red" />
            <ToggleButton Classes="accent" />
          </UniformGrid>
        </TabItem>
        <TabItem Header="ToggleButton:pointerover">
          <ToggleButton>
            <ToggleButton.Styles>
              <Style Selector="ToggleButton:checked">
                <Setter Property="Content" Value="checked" />
              </Style>
              <Style Selector="ToggleButton:flyout-open">
                <Setter Property="Content" Value="flyout-open" />
              </Style>
              <Style Selector="ToggleButton:disabled">
                <Setter Property="Content" Value="disabled" />
              </Style>
              <Style Selector="ToggleButton:focus">
                <Setter Property="Content" Value="focus" />
              </Style>
              <Style Selector="ToggleButton:focus-visible">
                <Setter Property="Content" Value="focus-visible" />
              </Style>
              <Style Selector="ToggleButton:focus-within">
                <Setter Property="Content" Value="focus-within" />
              </Style>
              <Style Selector="ToggleButton:indeterminate">
                <Setter Property="Content" Value="indeterminate" />
              </Style>
              <Style Selector="ToggleButton:pointerover">
                <Setter Property="Content" Value="pointerover" />
              </Style>
              <Style Selector="ToggleButton:pressed">
                <Setter Property="Content" Value="pressed" />
              </Style>
              <Style Selector="ToggleButton:unchecked">
                <Setter Property="Content" Value="unchecked" />
              </Style>
            </ToggleButton.Styles>
          </ToggleButton>
        </TabItem>
        <TabItem Header="ToggleButton[IsChecked=True] 属性Trigger">
          <ToggleButton>
            <ToggleButton.Styles>
              <Style Selector="ToggleButton[IsChecked=True]">
                <Setter Property="Content" Value="ToggleButton[IsChecked=True]" />
              </Style>
              <Style Selector="ToggleButton[IsChecked=True]:pointerover">
                <Setter Property="Content" Value="ToggleButton[IsChecked=True]:pointerover" />
              </Style>
              <Style Selector="ToggleButton[IsChecked=False]">
                <Setter Property="Content" Value="ToggleButton[IsChecked=False]" />
              </Style>
              <Style Selector="ToggleButton[IsThreeState=True]">
                <Setter Property="Content" Value="ToggleButton[IsThreeState=True]" />
              </Style>
            </ToggleButton.Styles>
          </ToggleButton>
        </TabItem>
        <TabItem Header="Classes.flag={Binding}">
          <DockPanel>
            <!--<ComboBox Name="cb_flag" DockPanel.Dock="Top" SelectedIndex="0">
                            <system:String>red</system:String>
                            <system:String>yellow</system:String>
                            <system:String>orangle</system:String>
                        </ComboBox>-->
            <CheckBox Name="cb_flag" DockPanel.Dock="Top" />
            <ToggleButton Classes.flag="{Binding ElementName=cb_flag, Path=IsChecked}">
              <ToggleButton.Styles>
                <Style Selector="ToggleButton.flag">
                  <Setter Property="Content" Value="ToggleButton.flag" />
                </Style>
                <Style Selector="ToggleButton.red">
                  <Setter Property="Content" Value="ToggleButton.red" />
                </Style>
                <Style Selector="ToggleButton.yellow">
                  <Setter Property="Content" Value="ToggleButton.yellow" />
                </Style>
                <Style Selector="ToggleButton.orangle">
                  <Setter Property="Content" Value="ToggleButton.orangle" />
                </Style>
              </ToggleButton.Styles>
            </ToggleButton>
          </DockPanel>
        </TabItem>
        <TabItem Header="Classes.flag={Binding}">
          <DockPanel>
            <ComboBox Name="cbb_flag"
                      DockPanel.Dock="Top"
                      SelectedIndex="0">
              <system:String>red</system:String>
              <system:String>yellow</system:String>
              <system:String>orangle</system:String>
            </ComboBox>
            <ToggleButton Classes.red="{Binding ElementName=cb_flag, Path=SelectedItem}">
              <ToggleButton.Styles>
                <Style Selector="ToggleButton.red">
                  <Setter Property="Content" Value="ToggleButton.red" />
                </Style>
                <Style Selector="ToggleButton.yellow">
                  <Setter Property="Content" Value="ToggleButton.yellow" />
                </Style>
                <Style Selector="ToggleButton.orangle">
                  <Setter Property="Content" Value="ToggleButton.orangle" />
                </Style>
              </ToggleButton.Styles>
            </ToggleButton>
          </DockPanel>
        </TabItem>
      </TabControl>
    </TabItem>

    <TabItem Header="DataTemplate.Trigger">
      <DockPanel>
        <Grid Width="200"
              Height="200"
              Background="Red">
          <Grid.Styles>
            <Style Selector="Grid">
              <Style.Animations>
                <!--  IterationCount="INFINITE" 要无限次地重复动画，请使用特殊值 INFINITE  -->
                <Animation IterationCount="INFINITE" Duration="0:0:1">
                  <!--<KeyFrame Cue="0%">
                    <Setter Property="TranslateTransform.X" Value="200" />
                  </KeyFrame>
                  <KeyFrame Cue="100%">
                    <Setter Property="TranslateTransform.X" Value="-100" />
                  </KeyFrame>-->
                  <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.0" />
                  </KeyFrame>
                  <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="1.0" />
                  </KeyFrame>
                </Animation>
              </Style.Animations>
            </Style>
          </Grid.Styles>
        </Grid>
      </DockPanel>
    </TabItem>

    <TabItem Header="DataTemplate.Trigger">
      <DockPanel>
        <ListBox ItemsSource="{GetStudents}">
          <ListBox.ItemTemplate>
            <DataTemplate DataType="{x:Type h:Student}">
              <Grid>
                <TextBlock x:Name="t" Text="{Binding Name}" />
                <Interaction.Behaviors>
                  <DataTriggerBehavior Binding="{Binding Path=Name}" Value="Jim">
                    <ChangePropertyAction PropertyName="Foreground"
                                          TargetObject="{Binding ElementName=t}"
                                          Value="Red" />
                  </DataTriggerBehavior>
                </Interaction.Behaviors>
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </DockPanel>
    </TabItem>
  </TabControl>
</UserControl>
