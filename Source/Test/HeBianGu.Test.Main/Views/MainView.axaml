<UserControl x:Class="HeBianGu.Test.Main.Views.MainView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:h="https://github.com/HeBianGu"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:ic="using:Avalonia.Xaml.Interactions.Custom"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="clr-namespace:HeBianGu.Test.Main.Views"
             xmlns:vm="clr-namespace:HeBianGu.Test.Main.ViewModels"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="vm:MainViewModel"
             mc:Ignorable="d">
    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:MainViewModel />
    </Design.DataContext>
    <TabControl>
        <TabItem Header="MultiComboBox">
            <h:MultiComboBox Name="mcb"
                             MinHeight="35"
                             VerticalAlignment="Top"
                             Background="Transparent"
                             BorderBrush="Black"
                             BorderThickness="1"
                             CornerRadius="5"
                             ItemsSource="{Binding Collection}"
                             MaxDropDownHeight="800"
                             SelectionMode="" />
        </TabItem>

        <TabItem Header="MyTemplatedControl">
            <h:MyTemplatedControl />
        </TabItem>
        <TabItem Header="MyButton">
            <h:MyButton Content="MyButton" />
        </TabItem>
        <TabItem Header="ControlTheme">
            <TabItem.Resources>
                <ControlTheme x:Key="EllipseButton" TargetType="Button">
                    <Setter Property="Background" Value="Blue" />
                    <Setter Property="Foreground" Value="Yellow" />
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Panel>
                                <Ellipse HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         Fill="{TemplateBinding Background}" />
                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}" />
                            </Panel>
                        </ControlTemplate>
                    </Setter>
                </ControlTheme>
            </TabItem.Resources>
            <Button Content="ControlTheme" Theme="{StaticResource EllipseButton}" />
        </TabItem>
        <TabItem Header="ControlTheme-应用全部">
            <TabItem.Resources>
                <ControlTheme x:Key="{x:Type Button}" TargetType="Button">
                    <Setter Property="Background" Value="Blue" />
                    <Setter Property="Foreground" Value="Yellow" />
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Panel>
                                <Ellipse HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         Fill="{TemplateBinding Background}" />
                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}" />
                            </Panel>
                        </ControlTemplate>
                    </Setter>
                </ControlTheme>
            </TabItem.Resources>
            <Button Content="ControlTheme" />
        </TabItem>
        <TabItem Header="Ioc">
            <Button Click="Ioc_Click" Content="Ioc" />
        </TabItem>
        <TabItem Header="Adornr">
            <Button Click="Adornr_Click" Content="Adornr" />
        </TabItem>
        <TabItem Header="AdornerDialog">
            <Button Click="AdornerDialog_Click" Content="AdornerDialog" />
        </TabItem>
        <TabItem Header="WindowDialog">
            <Button Click="WindowDialog_Click" Content="WindowDialog" />
        </TabItem>
        <TabItem Header="Behavior">
            <Button Content="Behavior">
                <i:Interaction.Behaviors>
                    <ic:ButtonClickEventTriggerBehavior>
                        <ia:InvokeCommandAction Command="{Binding BehaviorCommand}" />
                    </ic:ButtonClickEventTriggerBehavior>
                </i:Interaction.Behaviors>
            </Button>
        </TabItem>
        <TabItem Header="From">
            <h:Form>
                <h:Form.SelectObject>
                    <h:TypeCTestModel />
                </h:Form.SelectObject>
            </h:Form>
        </TabItem>

        <TabItem Header="Setting">
            <Button Click="Setting_Click" Content="Setting" />
        </TabItem>

        <TabItem Header="Message">
            <UniformGrid>
                <Button Command="{ShowCommand Presnter={h:GetStudent}}" Content="ShowCommand" />
                <Button Command="{h:ShowAdornerDialogCommand}"
                        CommandParameter="{h:GetStudent}"
                        Content="内嵌弹窗" />
                <Button Command="{ShowEditCommand Value={h:GetStudent}}" Content="ShowEditCommand" />
                <Button Command="{ShowViewCommand Value={h:GetStudent}}" Content="ShowViewCommand" />
                <Button Command="{ShowStringCommand}" Content="ShowStringCommand" />
                <Button Command="{ShowPercentCommand}" Content="ShowPercentCommand" />
                <Button Command="{ShowWaitCommand}" Content="ShowWaitCommand" />
                <Button Command="{Binding ShowMessageCommand}" Content="ShowMessageCommand" />
                <Button Command="{Binding ShowFormMessageCommand}" Content="ShowFormMessageCommand" />
                <Button Command="{Binding ShowNoticeMessageCommand}" Content="ShowNoticeMessageCommand" />
                <Button Command="{Binding ShowSnackMessageCommand}" Content="ShowSnackMessageCommand" />
                <Image IsHitTestVisible="False"
                       Opacity="0.1"
                       Stretch="UniformToFill" />
            </UniformGrid>
        </TabItem>

        <TabItem Header="Notice">
            <UniformGrid>
                <Button Command="{h:ShowInfoNoticeMessageCommand Message=我是Info消息}" Content="ShowInfo" />
                <Button Command="{h:ShowErrorNoticeMessageCommand Message=我是Error消息}" Content="ShowError" />
                <Button Command="{h:ShowSuccessNoticeMessageCommand Message=我是Success消息}" Content="ShowSuccess" />
                <Button Command="{h:ShowWarnNoticeMessageCommand Message=我是Warn消息}" Content="ShowWarn" />
                <Button Command="{h:ShowFatalNoticeMessageCommand Message=我是Fatal消息}" Content="ShowFatal" />
                <Button Command="{h:ShowProgressNoticeMessageCommand Message=我是Progress消息}" Content="ShowProgress" />
                <Button Command="{h:ShowStringNoticeMessageCommand Message=我是String消息}" Content="ShowString" />
                <Button Command="{h:ShowDialogNoticeMessageCommand Message=我是Dialog消息}" Content="ShowDialog" />
            </UniformGrid>
        </TabItem>

        <TabItem Header="Snack">
            <UniformGrid>
                <Button Command="{h:ShowInfoSnackMessageCommand Message=我是Info消息}" Content="ShowInfo" />
                <Button Command="{h:ShowErrorSnackMessageCommand Message=我是Error消息}" Content="ShowError" />
                <Button Command="{h:ShowSuccessSnackMessageCommand Message=我是Success消息}" Content="ShowSuccess" />
                <Button Command="{h:ShowWarnSnackMessageCommand Message=我是Warn消息}" Content="ShowWarn" />
                <Button Command="{h:ShowFatalSnackMessageCommand Message=我是Fatal消息}" Content="ShowFatal" />
                <Button Command="{h:ShowProgressSnackMessageCommand Message=我是Progress消息}" Content="ShowProgress" />
                <Button Command="{h:ShowStringSnackMessageCommand Message=我是String消息}" Content="ShowString" />
                <Button Command="{h:ShowDialogSnackMessageCommand Message=我是Dialog消息}" Content="ShowDialog" />
            </UniformGrid>
        </TabItem>
        <TabItem Header="DataTemplate自动加载">
            <UniformGrid>
                <ContentControl>
                    <h:My />
                </ContentControl>
            </UniformGrid>
        </TabItem>
        <TabItem Header="Styles自动加载">
            <UniformGrid>
                <ContentControl>
                    <h:MyTestButton Content="ssss" />
                </ContentControl>
            </UniformGrid>
        </TabItem>
        <TabItem Header="S.Button.Geomerty">
            <UniformGrid>
                <Button Content="{x:Static h:Geometrys.Close}">
                    <Button.Theme>
                        <ControlTheme BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Setter Property="Width" Value="30" />
                            <Setter Property="Height" Value="30" />
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Path VerticalAlignment="Center"
                                              Data="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Content}"
                                              Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                              Stretch="Uniform" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </ControlTheme>
                    </Button.Theme>
                </Button>

                <Button Content="{x:Static h:Geometrys.Warn}" Theme="{DynamicResource S.Button.Geometry}" />

                <Button Content="{x:Static h:Geometrys.Warn}" Theme="{DynamicResource {x:Static h:ButtonKeys.Geometry}}" />

            </UniformGrid>
        </TabItem>
        <TabItem Header="h:WindowSetting.Instance">
            <UniformGrid>
                <Image Source="{Binding Source={x:Static h:WindowSetting.Instance}, Path=BackImagePath}" />
                <Image Source="{Binding Source={x:Static h:LoginOptions.Instance}}" />
                <TextBlock Text="{Binding Source={x:Static h:WindowSetting.Instance}, Path=BackImagePath}" />
                <Image Source="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />
            </UniformGrid>
        </TabItem>
        <TabItem Header="ListBox">
            <ListBox ItemsSource="{Binding Collection}" />
        </TabItem>
        <TabItem Header="设置字体大小">
            <Button Command="{Binding SetFontSizeCommand}"
                    Content="设置字体大小"
                    FontSize="{DynamicResource {x:Static h:FontSizeKeys.Default}}" />
        </TabItem>
        <!--<TabItem Header="Step">
        <TabControl>
          <TabItem Header="Horizontal">
            <h:Step Height="Auto"
                    VerticalAlignment="Center"
                    Cattach.ItemHeight="Auto">
              <h:StepItemPresenter DisplayName="1"
                                   Message="成功"
                                   State="Success" />
              <h:StepItemPresenter DisplayName="2"
                                   Message="成功"
                                   State="Success" />
              <h:StepItemPresenter DisplayName="3"
                                   Message="成功"
                                   State="Success" />
              <h:StepItemPresenter DisplayName="4"
                                   Message="失败"
                                   State="Error" />
              <h:StepItemPresenter DisplayName="5"
                                   Message="正在运行"
                                   State="Running" />
              <h:StepItemPresenter DisplayName="6"
                                   Message=""
                                   State="Ready" />
              <h:StepItemPresenter DisplayName="7"
                                   Message=""
                                   State="Ready" />
            </h:Step>
          </TabItem>
          <TabItem Header="Vertical">
            <h:Step Height="Auto">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <h:StepItemVerticalPresenter DisplayName="1"
                                           Message="成功"
                                           State="Success" />
              <h:StepItemVerticalPresenter DisplayName="2"
                                           Message="成功"
                                           State="Success" />
              <h:StepItemVerticalPresenter DisplayName="3"
                                           Message="成功"
                                           State="Success" />
              <h:StepItemVerticalPresenter DisplayName="4"
                                           Message="失败"
                                           State="Error" />
              <h:StepItemVerticalPresenter DisplayName="5"
                                           Message="正在运行"
                                           State="Running" />
              <h:StepItemVerticalPresenter DisplayName="6"
                                           Message=""
                                           State="Ready" />
              <h:StepItemVerticalPresenter DisplayName="7"
                                           Message=""
                                           State="Ready" />
            </h:Step>
          </TabItem>
        </TabControl>
      </TabItem>-->

        <TabItem Header="Image">
            <TabItem.Resources>
                <ImageDrawing x:Key="ImageDrawing" ImageSource="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />
                <ImageDrawing x:Key="ImageDrawing1" ImageSource="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />
            </TabItem.Resources>
            <UniformGrid>
                <!--<Image Source="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />-->
                <Image Source="{DynamicResource {x:Static BackgroundImageKeys.BackgroundImage}}" />
                <TextBlock Text="{DynamicResource {x:Static BackgroundImageKeys.BackgroundImage}}" />
                <Grid>
                    <Grid.Background>
                        <ImageBrush Source="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />
                    </Grid.Background>
                </Grid>
                <Image>
                    <Image.Source>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <ImageDrawing ImageSource="avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png" />
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Image.Source>
                </Image>
                <Image>
                    <Image.Source>
                        <Bitmap>
                            avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png
                        </Bitmap>
                    </Image.Source>
                </Image>
                <Image>
                    <Image.Source>
                        <AssetBitmap>
                            avares://Avalonia.Extensions.BackgroundImage/Assets/Star.png
                        </AssetBitmap>
                    </Image.Source>
                </Image>
            </UniformGrid>
        </TabItem>
        <TabItem Header="DataGrid">
            <TabControl>
                <TabItem Header="Default">
                    <DataGrid AutoGenerateColumns="True" ItemsSource="{h:GetStudents}" />
                </TabItem>
                <TabItem Header="All">
                    <DataGrid AutoGenerateColumns="True"
                              CanUserReorderColumns="True"
                              CanUserResizeColumns="True"
                              CanUserSortColumns="True"
                              ColumnWidth="*"
                              GridLinesVisibility="All"
                              HeadersVisibility="All"
                              IsReadOnly="True"
                              ItemsSource="{h:GetStudents}"
                              MaxColumnWidth="200"
                              RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <TextBlock Margin="10,6" Text="DataGrid.RowDetailsTemplate" />
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*" Header="操作账号">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="*"
                                                Binding="{Binding Model.sMethod}"
                                                Header="操作" />
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </TabItem>
    </TabControl>
</UserControl>
